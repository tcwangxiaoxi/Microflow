/**
 * This class is generated by jOOQ
 */
package com.baidu.microflow.generated.jooq.tables.records;


import com.baidu.microflow.generated.jooq.tables.MicroflowJobTaskTrace;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MicroflowJobTaskTraceRecord extends UpdatableRecordImpl<MicroflowJobTaskTraceRecord> implements Record7<UInteger, UInteger, String, UInteger, UByte, Timestamp, Timestamp> {

    private static final long serialVersionUID = 349536579;

    /**
     * Setter for <code>microflow.microflow_job_task_trace.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.job_trace_id</code>.
     */
    public void setJobTraceId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.job_trace_id</code>.
     */
    public UInteger getJobTraceId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.task_name</code>.
     */
    public void setTaskName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.task_name</code>.
     */
    public String getTaskName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.retries_count</code>.
     */
    public void setRetriesCount(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.retries_count</code>.
     */
    public UInteger getRetriesCount() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.status</code>.
     */
    public void setStatus(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.status</code>.
     */
    public UByte getStatus() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>microflow.microflow_job_task_trace.end_time</code>.
     */
    public void setEndTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>microflow.microflow_job_task_trace.end_time</code>.
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UInteger, UInteger, String, UInteger, UByte, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UInteger, UInteger, String, UInteger, UByte, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.JOB_TRACE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.TASK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.RETRIES_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field5() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getJobTraceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTaskName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getRetriesCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value2(UInteger value) {
        setJobTraceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value3(String value) {
        setTaskName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value4(UInteger value) {
        setRetriesCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value5(UByte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value6(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord value7(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MicroflowJobTaskTraceRecord values(UInteger value1, UInteger value2, String value3, UInteger value4, UByte value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MicroflowJobTaskTraceRecord
     */
    public MicroflowJobTaskTraceRecord() {
        super(MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE);
    }

    /**
     * Create a detached, initialised MicroflowJobTaskTraceRecord
     */
    public MicroflowJobTaskTraceRecord(UInteger id, UInteger jobTraceId, String taskName, UInteger retriesCount, UByte status, Timestamp startTime, Timestamp endTime) {
        super(MicroflowJobTaskTrace.MICROFLOW_JOB_TASK_TRACE);

        set(0, id);
        set(1, jobTraceId);
        set(2, taskName);
        set(3, retriesCount);
        set(4, status);
        set(5, startTime);
        set(6, endTime);
    }
}
